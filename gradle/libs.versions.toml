# ===================================================================
#             优化和修正后的版本目录 (更新于 2025-06)
# ===================================================================
# 核心改动:
# 1. 引入 Compose BOM 来统一管理所有 Compose 依赖的版本。
# 2. 升级 AGP, Kotlin, Hilt 和其他 Jetpack 库到最新的稳定版本。
# 3. 确保 Compose Compiler 版本 (1.5.11) 与 Kotlin 版本 (2.0.0) 严格兼容。
# 4. 修正了 lifecycle 和 livedata 的错误/重复定义。
# 5. 使用 bundles 来简化 build.gradle.kts 中的依赖声明。
# ===================================================================

[versions]
# --- 构建工具 ---
agp = "8.5.0"  # 升级AGP到更新的稳定版
kotlin = "2.0.0" # 升级到Kotlin 2.0，性能更好
compose-compiler = "1.5.11" # 必须使用此版本来兼容 Kotlin 2.0.0

# --- Jetpack & AndroidX ---
coreKtx = "1.13.1"
appcompat = "1.7.0"
material = "1.12.0"
activity-compose = "1.9.0"
lifecycle = "2.8.2" # 统一所有lifecycle库的版本

# --- Jetpack Compose ---
# 使用BOM来管理所有Compose库的版本，不再需要为每个库单独指定版本
compose-bom = "2024.06.00"

# --- Hilt ---
hilt = "2.51.1" # Dagger Hilt
hilt-androidx-compiler = "1.2.0" # AndroidX Hilt 编译器

# --- 网络 ---
retrofit = "2.11.0" # 升级到较新的稳定版
okhttp = "4.12.0"

# --- 测试 ---
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"

javapoet = "1.13.0"

compose-markdown="0.5.5"

[libraries]
squareup-javapoet = { group = "com.squareup", name = "javapoet", version.ref = "javapoet" }

# --- 核心 & UI ---
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# --- Jetpack Compose ---
# 1. 引入Compose BOM (Bill of Materials)
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version = { ref = "compose-bom" } }
# 2. Compose库不再需要指定版本，它们会从BOM继承
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }

# --- Lifecycle & Activity (与Compose集成) ---
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = {group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle"}
# 修正：这是正确的 `runtime-livedata` 定义
androidx-compose-runtime-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata" }

# --- Hilt (依赖注入) ---
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
# 推荐添加 Hilt 与 Compose 的集成库
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hilt-androidx-compiler" }

# --- 网络 ---
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# --- 测试 ---
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

compose-markdown = { group = "com.github.jeziellago", name = "compose-markdown", version.ref = "compose-markdown" }

[bundles]
# 将常用的Compose UI库捆绑在一起，方便在 build.gradle.kts 中调用
compose-ui = [
    "androidx-compose-ui",
    "androidx-compose-foundation",
    "androidx-compose-material3",
    "androidx-compose-ui-tooling-preview",
]
# 将常用的Compose测试库捆绑在一起
compose-test = [
    "androidx-compose-ui-test-junit4",
    "junit"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }